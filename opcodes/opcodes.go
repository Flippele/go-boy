package opcodes

const (
	//0x

	NOP uint8 = iota
	LD_BC_n16
	LD_ADDR_BC_A
	INC_BC
	INC_B
	DEC_B
	LD_B_n8
	RLCA
	LD_ADDR_a16_SP
	ADD_HL_BC
	LD_A_ADDR_BC
	DEC_BC
	INC_C
	DEC_C
	LD_C_n8
	RRCA

	//1x

	STOP
	LD_DE_n16
	LD_ADDR_DE_A
	INC_DE
	INC_D
	DEC_D
	LD_D_n8
	RLA
	JR_e8
	ADD_HL_DE
	LD_A_ADDR_DE
	DEC_DE
	INC_E
	DEC_E
	LD_E_n8
	RRA

	//2x

	JR_NZ_e8
	LD_HL_n16
	LDI_ADDR_HL_A
	INC_HL
	INC_H
	DEC_H
	LD_H_n8
	DAA
	JR_Z_e8
	ADD_HL_HL
	LDI_A_ADDR_HL
	DEC_HL
	INC_L
	DEC_L
	LD_L_n8
	CPL

	//3x

	JR_NC_e8
	LD_SP_n16
	LDD_ADDR_HL_A
	INC_SP
	INC_ADDR_HL
	DEC_ADDR_HL
	LD_ADDR_HL_n8
	SCF
	JR_C_e8
	ADD_HL_SP
	LDD_A_ADDR_HL
	DEC_SP
	INC_A
	DEC_A
	LD_A_n8
	CCF

	//4x

	LD_B_B
	LD_B_C
	LD_B_D
	LD_B_E
	LD_B_H
	LD_B_L
	LD_B_ADDR_HL
	LD_B_A
	LD_C_B
	LD_C_C
	LD_C_D
	LD_C_E
	LD_C_H
	LD_C_L
	LD_C_ADDR_HL
	LD_C_A

	//5x

	LD_D_B
	LD_D_C
	LD_D_D
	LD_D_E
	LD_D_H
	LD_D_L
	LD_D_ADDR_HL
	LD_D_A
	LD_E_B
	LD_E_C
	LD_E_D
	LD_E_E
	LD_E_H
	LD_E_L
	LD_E_ADDR_HL
	LD_E_A

	//6x

	LD_H_B
	LD_H_C
	LD_H_D
	LD_H_E
	LD_H_H
	LD_H_L
	LD_H_ADDR_HL
	LD_H_A
	LD_L_B
	LD_L_C
	LD_L_D
	LD_L_E
	LD_L_H
	LD_L_L
	LD_L_ADDR_HL
	LD_L_A

	//7x

	LD_ADDR_HL_B
	LD_ADDR_HL_C
	LD_ADDR_HL_D
	LD_ADDR_HL_E
	LD_ADDR_HL_H
	LD_ADDR_HL_L
	HALT
	LD_ADDR_HL_A
	LD_A_B
	LD_A_C
	LD_A_D
	LD_A_E
	LD_A_H
	LD_A_L
	LD_A_ADDR_HL
	LD_A_A

	//8x

	ADD_B
	ADD_C
	ADD_D
	ADD_E
	ADD_H
	ADD_L
	ADD_ADDR_HL
	ADD_A
	ADC_B
	ADC_C
	ADC_D
	ADC_E
	ADC_H
	ADC_L
	ADC_ADDR_HL
	ADC_A

	//9x

	SUB_B
	SUB_C
	SUB_D
	SUB_E
	SUB_H
	SUB_L
	SUB_ADDR_HL
	SUB_A
	SBC_B
	SBC_C
	SBC_D
	SBC_E
	SBC_H
	SBC_L
	SBC_ADDR_HL
	SBC_A

	//Ax

	AND_B
	AND_C
	AND_D
	AND_E
	AND_H
	AND_L
	AND_ADDR_HL
	AND_A
	XOR_B
	XOR_C
	XOR_D
	XOR_E
	XOR_H
	XOR_L
	XOR_ADDR_HL
	XOR_A

	//Bx

	OR_B
	OR_C
	OR_D
	OR_E
	OR_H
	OR_L
	OR_ADDR_HL
	OR_A
	CP_B
	CP_C
	CP_D
	CP_E
	CP_H
	CP_L
	CP_ADDR_HL
	CP_A

	//Cx

	RET_NZ
	POP_BC
	JP_NZ_a16
	JP_a16
	CALL_NZ_a16
	PUSH_BC
	ADD_A_n8
	RST_00
	RET_Z
	RET
	JP_Z_a16
	PREFIX
	CALL_Z_a16
	CALL_a16
	ADC_A_n8
	RST_08

	//Dx

	RET_NC
	POP_DE
	JP_NC_a16
	_
	CALL_NC_a16
	PUSH_DE
	SUB_A_n8
	RST_10
	RET_C
	RETI
	JP_C_a16
	_
	CALL_C_a16
	_
	SBC_A_n8
	RST_18

	//Ex

	LDH_ADDR_a8_A
	POP_HL
	LD_ADDR_C_A
	_
	_
	PUSH_HL
	AND_n8
	RST_20
	ADD_SP_e8
	JP_HL
	LD_ADDR_a16_A
	_
	_
	_
	XOR_n8
	RST_28

	//Fx

	LDH_A_ADDR_a8
	POP_AF
	LD_A_ADDR_C
	DI
	_
	PUSH_AF
	OR_n8
	RST_30
	LD_HL_SP_PLUS_e8
	LD_SP_HL
	LD_A_ADDR_a16
	EI
	_
	_
	CP_n8
	RST_38
)

const (
	// 0x

	RLC_B uint8 = iota
	RLC_C
	RLC_D
	RLC_E
	RLC_H
	RLC_L
	RLC_ADDR_HL
	RLC_A
	RRC_B
	RRC_C
	RRC_D
	RRC_E
	RRC_H
	RRC_L
	RRC_ADDR_HL
	RRC_A

	// 1x

	RL_B
	RL_C
	RL_D
	RL_E
	RL_H
	RL_L
	RL_ADDR_HL
	RL_A
	RR_B
	RR_C
	RR_D
	RR_E
	RR_H
	RR_L
	RR_ADDR_HL
	RR_A

	// 2x

	SLA_B
	SLA_C
	SLA_D
	SLA_E
	SLA_H
	SLA_L
	SLA_ADDR_HL
	SLA_A
	SRA_B
	SRA_C
	SRA_D
	SRA_E
	SRA_H
	SRA_L
	SRA_ADDR_HL
	SRA_A

	// 3x

	SWAP_B
	SWAP_C
	SWAP_D
	SWAP_E
	SWAP_H
	SWAP_L
	SWAP_ADDR_HL
	SWAP_A
	SRL_B
	SRL_C
	SRL_D
	SRL_E
	SRL_H
	SRL_L
	SRL_ADDR_HL
	SRL_A

	// 4x

	BIT_0_B
	BIT_0_C
	BIT_0_D
	BIT_0_E
	BIT_0_H
	BIT_0_L
	BIT_0_ADDR_HL
	BIT_0_A
	BIT_1_B
	BIT_1_C
	BIT_1_D
	BIT_1_E
	BIT_1_H
	BIT_1_L
	BIT_1_ADDR_HL
	BIT_1_A

	// 5x

	BIT_2_B
	BIT_2_C
	BIT_2_D
	BIT_2_E
	BIT_2_H
	BIT_2_L
	BIT_2_ADDR_HL
	BIT_2_A
	BIT_3_B
	BIT_3_C
	BIT_3_D
	BIT_3_E
	BIT_3_H
	BIT_3_L
	BIT_3_ADDR_HL
	BIT_3_A

	// 6x

	BIT_4_B
	BIT_4_C
	BIT_4_D
	BIT_4_E
	BIT_4_H
	BIT_4_L
	BIT_4_ADDR_HL
	BIT_4_A
	BIT_5_B
	BIT_5_C
	BIT_5_D
	BIT_5_E
	BIT_5_H
	BIT_5_L
	BIT_5_ADDR_HL
	BIT_5_A

	// 7x

	BIT_6_B
	BIT_6_C
	BIT_6_D
	BIT_6_E
	BIT_6_H
	BIT_6_L
	BIT_6_ADDR_HL
	BIT_6_A
	BIT_7_B
	BIT_7_C
	BIT_7_D
	BIT_7_E
	BIT_7_H
	BIT_7_L
	BIT_7_ADDR_HL
	BIT_7_A

	// 8x

	RES_0_B
	RES_0_C
	RES_0_D
	RES_0_E
	RES_0_H
	RES_0_L
	RES_0_ADDR_HL
	RES_0_A
	RES_1_B
	RES_1_C
	RES_1_D
	RES_1_E
	RES_1_H
	RES_1_L
	RES_1_ADDR_HL
	RES_1_A

	// 9x

	RES_2_B
	RES_2_C
	RES_2_D
	RES_2_E
	RES_2_H
	RES_2_L
	RES_2_ADDR_HL
	RES_2_A
	RES_3_B
	RES_3_C
	RES_3_D
	RES_3_E
	RES_3_H
	RES_3_L
	RES_3_ADDR_HL
	RES_3_A

	// Ax

	RES_4_B
	RES_4_C
	RES_4_D
	RES_4_E
	RES_4_H
	RES_4_L
	RES_4_ADDR_HL
	RES_4_A
	RES_5_B
	RES_5_C
	RES_5_D
	RES_5_E
	RES_5_H
	RES_5_L
	RES_5_ADDR_HL
	RES_5_A

	// Bx

	RES_6_B
	RES_6_C
	RES_6_D
	RES_6_E
	RES_6_H
	RES_6_L
	RES_6_ADDR_HL
	RES_6_A
	RES_7_B
	RES_7_C
	RES_7_D
	RES_7_E
	RES_7_H
	RES_7_L
	RES_7_ADDR_HL
	RES_7_A

	// Cx

	SET_0_B
	SET_0_C
	SET_0_D
	SET_0_E
	SET_0_H
	SET_0_L
	SET_0_ADDR_HL
	SET_0_A
	SET_1_B
	SET_1_C
	SET_1_D
	SET_1_E
	SET_1_H
	SET_1_L
	SET_1_ADDR_HL
	SET_1_A

	// Dx

	SET_2_B
	SET_2_C
	SET_2_D
	SET_2_E
	SET_2_H
	SET_2_L
	SET_2_ADDR_HL
	SET_2_A
	SET_3_B
	SET_3_C
	SET_3_D
	SET_3_E
	SET_3_H
	SET_3_L
	SET_3_ADDR_HL
	SET_3_A

	// Ex

	SET_4_B
	SET_4_C
	SET_4_D
	SET_4_E
	SET_4_H
	SET_4_L
	SET_4_ADDR_HL
	SET_4_A
	SET_5_B
	SET_5_C
	SET_5_D
	SET_5_E
	SET_5_H
	SET_5_L
	SET_5_ADDR_HL
	SET_5_A

	// Fx

	SET_6_B
	SET_6_C
	SET_6_D
	SET_6_E
	SET_6_H
	SET_6_L
	SET_6_ADDR_HL
	SET_6_A
	SET_7_B
	SET_7_C
	SET_7_D
	SET_7_E
	SET_7_H
	SET_7_L
	SET_7_ADDR_HL
	SET_7_A
)
